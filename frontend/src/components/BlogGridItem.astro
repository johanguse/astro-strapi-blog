---
import { Badge } from "@components/ui/badge";
const { post } = Astro.props;

if (!post || !post.attributes) {
  // Handle the case where post or post.attributes is undefined.
  throw new Error("Post or post attributes are undefined.");
}

const { slug, featuredImage, title, excerpt, author } = post.attributes;
const url = import.meta.env.STRAPI_URL;

// Assuming author and featuredImage are properly structured data with attributes
const authorImage = author.data?.attributes.bioImage.data?.attributes.url
  ? `${url}${author.data.attributes.bioImage.data.attributes.url}`
  : "https://via.placeholder.com/150";

const postImage = featuredImage.data?.attributes.url
  ? `${url}${featuredImage.data.attributes.url}`
  : "https://via.placeholder.com/1080";
---

<article class="rounded-md overflow-hidden shadow-sm p-4 transition-transform h-auto">
  <a href={`/post/${slug}`} class="block">
    <div class="rounded-md h-48 w-full overflow-hidden">
      <img
        class="object-cover w-full h-full"
        src={postImage}
        alt={`Featured image for ${title}`}
      />
    </div>
    <div>
      <Badge radius="md" className="capitalize">Bla bla bla</Badge>
      <h1 class="my-2 font-bold text-xl text-gray-900">{title}</h1>
      <p class="my-2 text-gray-700 line-clamp-3">{excerpt}</p>
    </div>
  </a>
  <div class="flex justify-between my-4 items-center">
    <div class="flex space-x-2 items-center overflow-hidden">
      <img
        class="inline-block h-8 w-8 rounded-full ring-2 ring-white"
        src={authorImage}
        alt={`${author?.name}'s picture`}
      />
      <p class="font-medium text-xs text-gray-600 cursor-pointer">
        {author?.name}
      </p>
    </div>
    <a
      href={`/post/${slug}`}
      class="inline-flex items-center justify-center px-5 py-2 border border-transparent text-base font-medium rounded-md text-white bg-yellow-500 hover:bg-yellow-400"
    >
      Read article
    </a>
  </div>
</article> 
