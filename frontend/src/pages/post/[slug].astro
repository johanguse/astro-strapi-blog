---
import type { APIResponseCollection } from '@strapi/types/types';
import qs from 'qs';
import Layout from '@layouts/Layout.astro';
import SingleBlogItem from '@components/SingleBlogItem.astro';

export async function getStaticPaths() {
  let url = import.meta.env.STRAPI_URL + '/api/posts';

  const query = qs.stringify({
    populate: {
      featuredImage: {
        fields: ['name', 'width', 'height', 'url'],
      },
      author: {
        populate: {
          bioImage: {
            fields: ['name', 'width', 'height', 'url'],
          },
        },
      },
      category: {
        populate: true,
      },
    },
  });

  try {
    const response = await fetch(url + '?' + query);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data: APIResponseCollection<"api::post.post"> = await response.json();

    return data.data.map((post) => {
      return {
        params: { slug: post.attributes.slug },
        props: { post },
      };
    });
  } catch (error) {
    console.error('Failed to get static paths:', error);
    return [];
  }
}

const { post } = Astro.props;

---
<Layout title={post.attributes.title ?? import.meta.env.WEBSITE_NAME}>
  <SingleBlogItem post={post} />
</Layout>
